@model CategoryViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit Category</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CategoryEdit" asp-method="Post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Category.Id" />
            <div class="form-group">
                <label asp-for="Category.Name" class="control-label"></label>
                <input asp-for="Category.Name" class="form-control" />
                <span asp-validation-for="Category.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category.CategoryRoles" class="control-label">Roles</label>
                <select asp-for="SelectedRoles" asp-items="@Model.AvailableRoles" class="multiselect"></select>
                <span asp-validation-for="Category.CategoryRoles" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="CategoryList">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/bootstrap-multiselect/dist/js/bootstrap-multiselect.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.multiselect').multiselect({
                buttonWidth: '100%',
                enableFiltering: true,
                enableCaseInsensitiveFiltering: true,
                includeSelectAllOption: true,
                buttonClass: 'btn btn-primary'
            });
        });
    </script>
}


